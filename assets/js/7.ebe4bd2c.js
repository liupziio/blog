(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(t,s,a){"use strict";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"三个高阶函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个高阶函数"}},[t._v("#")]),t._v(" 三个高阶函数")]),t._v(" "),a("h2",{attrs:{id:"_1、filter-过滤函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、filter-过滤函数"}},[t._v("#")]),t._v(" 1、filter 过滤函数")]),t._v(" "),a("h3",{attrs:{id:"案例思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例思想"}},[t._v("#")]),t._v(" 案例思想")]),t._v(" "),a("ul",[a("li",[t._v("这个函数他会去遍历当前数组，条件是 return 出一个布尔值\n"),a("ul",[a("li",[t._v("遍历第一个 10\n"),a("ul",[a("li",[t._v("renturn 10<100 所以返回true 那么之后这个true数据就会存到接受数据的数组中")])])]),t._v(" "),a("li",[t._v("遍历第三个 111 时\n"),a("ul",[a("li",[t._v("return 111<100 所以返回false 那么之后这个false数据就会被抛弃")])])])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("444")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newNums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回小于100的数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newNums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n#结果返回 newNums【"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("】\n\n\n")])])]),a("h3",{attrs:{id:"文本说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本说明"}},[t._v("#")]),t._v(" 文本说明")]),t._v(" "),a("ul",[a("li",[t._v("filter函数会过滤掉不要的函数，或者过滤出来一个需要的数组")]),t._v(" "),a("li",[t._v("filter中的回调函数有一个要求: 必须返回一个boolean值(布尔值)")]),t._v(" "),a("li",[t._v("true: 当返回true时, 函数内部会自动将这次回调的n加入到新的数组中")]),t._v(" "),a("li",[t._v("false: 当返回false时, 函数内部会过滤掉这次的n")])]),t._v(" "),a("h2",{attrs:{id:"_2、map映射一对一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、map映射一对一"}},[t._v("#")]),t._v(" 2、map映射一对一")]),t._v(" "),a("h3",{attrs:{id:"案例思想-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例思想-2"}},[t._v("#")]),t._v(" 案例思想")]),t._v(" "),a("ul",[a("li",[t._v("map回调函数会遍历当前数组，并且对他的条件执行，然后返回相应的数组")]),t._v(" "),a("li",[t._v("遍历第一个 20 ，\n"),a("ul",[a("li",[t._v("return 20*2 所以把结果40返回给相应的数组")])])]),t._v(" "),a("li",[t._v("遍历第二个40\n"),a("ul",[a("li",[t._v("return 40*2 所以把结果80返回给相应数组")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("\tnewNums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 【"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("】\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" new2Nums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newNums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历这个数组，并且在这里设置条件，条件计算完成返回给相应的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n#结果返回  new2Nums "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"文本说明-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本说明-2"}},[t._v("#")]),t._v(" 文本说明")]),t._v(" "),a("ul",[a("li",[t._v("map函数会给你返回一个根据条件处理过的新数组")]),t._v(" "),a("li",[t._v("map中的回调函数中放入你的条件")])]),t._v(" "),a("h2",{attrs:{id:"_3、reduce汇总函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、reduce汇总函数"}},[t._v("#")]),t._v(" 3、reduce汇总函数")]),t._v(" "),a("h3",{attrs:{id:"案例思想-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例思想-3"}},[t._v("#")]),t._v(" 案例思想")]),t._v(" "),a("ul",[a("li",[t._v("第一次遍历\n"),a("ul",[a("li",[t._v("20+40")])])]),t._v(" "),a("li",[t._v("第二次遍历\n"),a("ul",[a("li",[t._v("60+80")])])]),t._v(" "),a("li",[t._v("依次往下遍历执行，直至执行完")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("  new2Nums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("new2Nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//tmp 上次结果，item当前数，index第几次计算次数1开始")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tmp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("item\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n#结果返回  new2Nums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("240")]),t._v("\n")])])]),a("h3",{attrs:{id:"文本说明-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本说明-3"}},[t._v("#")]),t._v(" 文本说明")]),t._v(" "),a("ul",[a("li",[t._v("可用于汇总与平均")]),t._v(" "),a("li",[t._v("有三个参数\n"),a("ul",[a("li",[t._v("第一个是上次结果")]),t._v(" "),a("li",[t._v("第二个是当前要遍历的")]),t._v(" "),a("li",[t._v("第三个是index索引值")])])])]),t._v(" "),a("h1",{attrs:{id:"_3-1reduce汇总第二种说法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1reduce汇总第二种说法"}},[t._v("#")]),t._v(" 3.1reduce汇总第二种说法")]),t._v(" "),a("h3",{attrs:{id:"案例思想-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例思想-4"}},[t._v("#")]),t._v(" 案例思想")]),t._v(" "),a("ul",[a("li",[t._v("让books数组中的每一个对象的price和count相乘\n"),a("ul",[a("li",[t._v("因为第二个参数是要遍历books中的数据，所以 book.price 和 book.count")]),t._v(" "),a("li",[t._v("就可以取到books数组中每一个对象的 price 和 count")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("books"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("preValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//preValue是上一次结果，book是this.books中的每一项")]),t._v("\n     \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" preValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" book"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" book"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n     \n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这句话返回了0+book.price * book.count")]),t._v("\n     \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里的0定义了preValue上一次结果为0")]),t._v("\n")])])]),a("h1",{attrs:{id:"函数链式编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数链式编程"}},[t._v("#")]),t._v(" 函数链式编程")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arrs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n#结果返回 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("240")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);